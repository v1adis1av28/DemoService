services:
  db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: advertisements
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./app/config:/app/config:ro
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=postgres://postgres:postgres@db:5432/advertisements?sslmode=disable
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
  
  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app/migrations/:/migrations
    command: ["-path", "/migrations/", "-database", "postgres://postgres:postgres@db:5432/advertisements?sslmode=disable", "up"]

volumes:
  pgdata: